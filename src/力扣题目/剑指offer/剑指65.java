package 力扣题目.剑指offer;

import java.util.Arrays;

public class 剑指65 {
    //a+b时 如果都没有进位 那么a^b就是结果 如果有进位 则a+b=(a^b)+(a&b)<<1 但是由于不能用+
    //所以不断重复 让某一次的进位为0 那么结果就是此时的a^b了

    /*
            1011 a
             +
            0110 b
             =
            10001

      ^后   1101 a
            +
     进位后  0100 b
            =
           10001

      ^后   1001 a
            +
     进位后  1000 b
            =
           10001

      ^后   0001 a
            +
     进位后 10000 b
            =
           10001

      ^后  10001 a
            +
     进位后 0000    b
            =
           10001


           由观察可以得出 由于a不会进位 所以a的有效位数是一直不变的，而b一直等于进位 导致位数会往高位增加 当b的有1的位数完全超过a的有1的位数的时候，a^b就会把b全部加给a 同时由于a和b中有1的有效位不再重叠 所以进位为0；
    */
    public int add(int a, int b) {

        while(b!=0){
            int temp = (a&b)<<1;
            a=a^b;
            b=temp;
        }
        return  a;
    }


}
